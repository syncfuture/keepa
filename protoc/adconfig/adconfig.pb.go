// Code generated by protoc-gen-go. DO NOT EDIT.
// source: adconfig/adconfig.proto

package adconfig

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ADConfig struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ADConfig) Reset()         { *m = ADConfig{} }
func (m *ADConfig) String() string { return proto.CompactTextString(m) }
func (*ADConfig) ProtoMessage()    {}
func (*ADConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_6608eb616819d22b, []int{0}
}

func (m *ADConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ADConfig.Unmarshal(m, b)
}
func (m *ADConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ADConfig.Marshal(b, m, deterministic)
}
func (m *ADConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ADConfig.Merge(m, src)
}
func (m *ADConfig) XXX_Size() int {
	return xxx_messageInfo_ADConfig.Size(m)
}
func (m *ADConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ADConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ADConfig proto.InternalMessageInfo

func (m *ADConfig) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterType((*ADConfig)(nil), "adconfig.ADConfig")
}

func init() { proto.RegisterFile("adconfig/adconfig.proto", fileDescriptor_6608eb616819d22b) }

var fileDescriptor_6608eb616819d22b = []byte{
	// 117 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x4c, 0x49, 0xce,
	0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x87, 0x31, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0x60,
	0x7c, 0x25, 0x29, 0x2e, 0x0e, 0x47, 0x17, 0x67, 0x30, 0x5b, 0x88, 0x8f, 0x8b, 0xc9, 0xd3, 0x45,
	0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x88, 0xc9, 0xd3, 0xc5, 0xc9, 0x30, 0x4a, 0x3f, 0x3d, 0xb3,
	0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0xbf, 0xb8, 0x32, 0x2f, 0x39, 0xad, 0xb4, 0xa4,
	0xb4, 0x28, 0x55, 0x3f, 0x31, 0xa5, 0x2c, 0xb5, 0xa8, 0x24, 0xb3, 0x38, 0x55, 0x1f, 0x6c, 0x5c,
	0x32, 0xdc, 0xf8, 0x24, 0x36, 0xb0, 0x80, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x14, 0x8b,
	0x14, 0x7a, 0x00, 0x00, 0x00,
}
